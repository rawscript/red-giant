# Red Giant Protocol - Kubernetes Deployment
apiVersion: v1
kind: Namespace
metadata:
  name: red-giant
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: red-giant-config
  namespace: red-giant
data:
  config.json: |
    {
      "listen_addr": ":8080",
      "max_chunk_size": 262144,
      "max_workers": 8,
      "buffer_size": 1048576,
      "timeout": "30s",
      "enable_tls": false,
      "enable_metrics": true,
      "metrics_port": 9090,
      "log_level": "INFO",
      "max_connections": 1000,
      "rate_limit_mbps": 100
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: red-giant-server
  namespace: red-giant
  labels:
    app: red-giant-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: red-giant-server
  template:
    metadata:
      labels:
        app: red-giant-server
    spec:
      containers:
      - name: red-giant-server
        image: red-giant:latest
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: RED_GIANT_ADDR
          value: ":8080"
        - name: RED_GIANT_TLS
          value: "false"
        - name: RED_GIANT_LOG_LEVEL
          value: "INFO"
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config
        configMap:
          name: red-giant-config
---
apiVersion: v1
kind: Service
metadata:
  name: red-giant-service
  namespace: red-giant
  labels:
    app: red-giant-server
spec:
  selector:
    app: red-giant-server
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: red-giant-ingress
  namespace: red-giant
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: red-giant.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: red-giant-service
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: red-giant-hpa
  namespace: red-giant
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: red-giant-server
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: v1
kind: ServiceMonitor
metadata:
  name: red-giant-metrics
  namespace: red-giant
  labels:
    app: red-giant-server
spec:
  selector:
    matchLabels:
      app: red-giant-server
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics