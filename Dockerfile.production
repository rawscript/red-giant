# Red Giant Protocol - Production Dockerfile with C Core
FROM golang:1.21-alpine AS builder

# Install build dependencies including GCC for CGO
RUN apk add --no-cache gcc musl-dev git ca-certificates tzdata

# Set working directory
WORKDIR /app

# Copy source files
COPY go.mod go.sum ./
COPY *.go ./
COPY *.c ./
COPY *.h ./

# Download dependencies
RUN go mod download

# Build with CGO enabled for C core
RUN CGO_ENABLED=1 GOOS=linux go build -a -ldflags '-extldflags "-static"' -o red-giant-server red_giant_server.go

# Production image
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add ca-certificates tzdata

# Create non-root user
RUN addgroup -g 1001 redgiant && \
    adduser -D -u 1001 -G redgiant redgiant

# Set working directory
WORKDIR /app

# Copy binary
COPY --from=builder /app/red-giant-server .

# Change ownership
RUN chown redgiant:redgiant /app/red-giant-server

# Switch to non-root user
USER redgiant

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Run the server
CMD ["./red-giant-server"]